{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexa\\\\Documents\\\\Tesis-front\\\\StarterKit\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport { Switch, BrowserRouter as Router } from \"react-router-dom\";\nimport { connect } from \"react-redux\"; // Import Routes\n\nimport { authProtectedRoutes, publicRoutes } from \"./routes/\";\nimport AppRoute from \"./routes/route\"; // layouts\n\nimport VerticalLayout from \"./components/VerticalLayout/\";\nimport HorizontalLayout from \"./components/HorizontalLayout/\";\nimport NonAuthLayout from \"./components/NonAuthLayout\"; // Import scss\n\nimport \"./theme.scss\"; //Fake backend\n\nimport fakeBackend from './helpers/AuthType/fakeBackend'; // //Firebase helper\n// import { initFirebaseBackend } from \"./helpers/firebase_helper\";\n// Activating fake backend\n\nfakeBackend(); // const firebaseConfig = {\n// \tapiKey: process.env.REACT_APP_APIKEY,\n// \tauthDomain: process.env.REACT_APP_AUTHDOMAIN,\n// \tdatabaseURL: process.env.REACT_APP_DATABASEURL,\n// \tprojectId: process.env.REACT_APP_PROJECTID,\n// \tstorageBucket: process.env.REACT_APP_STORAGEBUCKET,\n// \tmessagingSenderId: process.env.REACT_APP_MESSAGINGSENDERID,\n// \tappId: process.env.REACT_APP_APPID,\n// \tmeasurementId: process.env.REACT_APP_MEASUREMENTID,\n// };\n// // init firebase backend\n// initFirebaseBackend(firebaseConfig);\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getLayout = () => {\n      let layoutCls = VerticalLayout;\n\n      switch (this.props.layout.layoutType) {\n        case \"horizontal\":\n          layoutCls = HorizontalLayout;\n          break;\n\n        default:\n          layoutCls = VerticalLayout;\n          break;\n      }\n\n      return layoutCls;\n    };\n\n    this.state = {};\n    this.getLayout = this.getLayout.bind(this);\n  }\n  /**\n   * Returns the layout\n   */\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 6\n      }\n    }, publicRoutes.map((route, idx) => /*#__PURE__*/React.createElement(AppRoute, {\n      path: route.path,\n      layout: NonAuthLayout,\n      component: route.component,\n      key: idx,\n      isAuthProtected: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 8\n      }\n    })), authProtectedRoutes.map((route, idx) => /*#__PURE__*/React.createElement(AppRoute, {\n      path: route.path,\n      layout: Layout,\n      component: route.component,\n      key: idx,\n      isAuthProtected: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 8\n      }\n    })))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    layout: state.Layout\n  };\n};\n\nexport default connect(mapStateToProps, null)(App);","map":{"version":3,"sources":["C:/Users/alexa/Documents/Tesis-front/StarterKit/src/App.js"],"names":["React","Component","Switch","BrowserRouter","Router","connect","authProtectedRoutes","publicRoutes","AppRoute","VerticalLayout","HorizontalLayout","NonAuthLayout","fakeBackend","App","constructor","props","getLayout","layoutCls","layout","layoutType","state","bind","render","map","route","idx","path","component","Layout","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,aAAa,IAAIC,MAAlC,QAAgD,kBAAhD;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAEA;;AACA,SAASC,mBAAT,EAA8BC,YAA9B,QAAkD,WAAlD;AACA,OAAOC,QAAP,MAAqB,gBAArB,C,CAEA;;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,OAAOC,aAAP,MAA0B,4BAA1B,C,CAEA;;AACA,OAAO,cAAP,C,CAEA;;AACA,OAAOC,WAAP,MAAwB,gCAAxB,C,CAEA;AACA;AAEA;;AACAA,WAAW,G,CAEX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA,MAAMC,GAAN,SAAkBZ,SAAlB,CAA4B;AAC3Ba,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;;AADkB,SASnBC,SATmB,GASP,MAAM;AACjB,UAAIC,SAAS,GAAGR,cAAhB;;AAEA,cAAQ,KAAKM,KAAL,CAAWG,MAAX,CAAkBC,UAA1B;AACC,aAAK,YAAL;AACCF,UAAAA,SAAS,GAAGP,gBAAZ;AACA;;AACD;AACCO,UAAAA,SAAS,GAAGR,cAAZ;AACA;AANF;;AAQA,aAAOQ,SAAP;AACA,KArBkB;;AAElB,SAAKG,KAAL,GAAa,EAAb;AACA,SAAKJ,SAAL,GAAiB,KAAKA,SAAL,CAAeK,IAAf,CAAoB,IAApB,CAAjB;AACA;AAED;;;;;AAiBAC,EAAAA,MAAM,GAAG;AAGR,wBACC,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACEf,YAAY,CAACgB,GAAb,CAAiB,CAACC,KAAD,EAAQC,GAAR,kBACjB,oBAAC,QAAD;AACC,MAAA,IAAI,EAAED,KAAK,CAACE,IADb;AAEC,MAAA,MAAM,EAAEf,aAFT;AAGC,MAAA,SAAS,EAAEa,KAAK,CAACG,SAHlB;AAIC,MAAA,GAAG,EAAEF,GAJN;AAKC,MAAA,eAAe,EAAE,KALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADF,EAWEnB,mBAAmB,CAACiB,GAApB,CAAwB,CAACC,KAAD,EAAQC,GAAR,kBACxB,oBAAC,QAAD;AACC,MAAA,IAAI,EAAED,KAAK,CAACE,IADb;AAEC,MAAA,MAAM,EAAEE,MAFT;AAGC,MAAA,SAAS,EAAEJ,KAAK,CAACG,SAHlB;AAIC,MAAA,GAAG,EAAEF,GAJN;AAKC,MAAA,eAAe,EAAE,IALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CAXF,CADD,CADD,CADD;AA2BA;;AAtD0B;;AAyD5B,MAAMI,eAAe,GAAIT,KAAD,IAAW;AAClC,SAAO;AACNF,IAAAA,MAAM,EAAEE,KAAK,CAACQ;AADR,GAAP;AAGA,CAJD;;AAMA,eAAevB,OAAO,CAACwB,eAAD,EAAkB,IAAlB,CAAP,CAA+BhB,GAA/B,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Switch, BrowserRouter as Router } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\n// Import Routes\nimport { authProtectedRoutes, publicRoutes } from \"./routes/\";\nimport AppRoute from \"./routes/route\";\n\n// layouts\nimport VerticalLayout from \"./components/VerticalLayout/\";\nimport HorizontalLayout from \"./components/HorizontalLayout/\";\nimport NonAuthLayout from \"./components/NonAuthLayout\";\n\n// Import scss\nimport \"./theme.scss\";\n\n//Fake backend\nimport fakeBackend from './helpers/AuthType/fakeBackend';\n\n// //Firebase helper\n// import { initFirebaseBackend } from \"./helpers/firebase_helper\";\n\n// Activating fake backend\nfakeBackend();\n\n// const firebaseConfig = {\n// \tapiKey: process.env.REACT_APP_APIKEY,\n// \tauthDomain: process.env.REACT_APP_AUTHDOMAIN,\n// \tdatabaseURL: process.env.REACT_APP_DATABASEURL,\n// \tprojectId: process.env.REACT_APP_PROJECTID,\n// \tstorageBucket: process.env.REACT_APP_STORAGEBUCKET,\n// \tmessagingSenderId: process.env.REACT_APP_MESSAGINGSENDERID,\n// \tappId: process.env.REACT_APP_APPID,\n// \tmeasurementId: process.env.REACT_APP_MEASUREMENTID,\n// };\n  \n// // init firebase backend\n// initFirebaseBackend(firebaseConfig);\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {};\n\t\tthis.getLayout = this.getLayout.bind(this);\n\t}\n\n\t/**\n\t * Returns the layout\n\t */\n\tgetLayout = () => {\n\t\tlet layoutCls = VerticalLayout;\n\n\t\tswitch (this.props.layout.layoutType) {\n\t\t\tcase \"horizontal\":\n\t\t\t\tlayoutCls = HorizontalLayout;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tlayoutCls = VerticalLayout;\n\t\t\t\tbreak;\n\t\t}\n\t\treturn layoutCls;\n\t};\n\n\trender() {\n\n\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<Router>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t{publicRoutes.map((route, idx) => (\n\t\t\t\t\t\t\t<AppRoute\n\t\t\t\t\t\t\t\tpath={route.path}\n\t\t\t\t\t\t\t\tlayout={NonAuthLayout}\n\t\t\t\t\t\t\t\tcomponent={route.component}\n\t\t\t\t\t\t\t\tkey={idx}\n\t\t\t\t\t\t\t\tisAuthProtected={false}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t))}\n\n\t\t\t\t\t\t{authProtectedRoutes.map((route, idx) => (\n\t\t\t\t\t\t\t<AppRoute\n\t\t\t\t\t\t\t\tpath={route.path}\n\t\t\t\t\t\t\t\tlayout={Layout}\n\t\t\t\t\t\t\t\tcomponent={route.component}\n\t\t\t\t\t\t\t\tkey={idx}\n\t\t\t\t\t\t\t\tisAuthProtected={true}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</Switch>\n\t\t\t\t</Router>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tlayout: state.Layout,\n\t};\n};\n\nexport default connect(mapStateToProps, null)(App);\n"]},"metadata":{},"sourceType":"module"}