{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexa\\\\Documents\\\\Tesis-front\\\\StarterKit\\\\src\\\\pages\\\\Sockets\\\\text.js\";\nimport React, { useRef } from \"react\";\nimport io from \"socket.io-client\";\nimport socket from \"./socket\";\n\nconst text = () => {\n  const canvasRef = useRef(null);\n  const canvas = canvasRef.current;\n  var context = canvas.getContext(\"2d\");\n  var btn = document.querySelector(\"#btn\");\n  canvas.width = 512;\n  canvas.height = 384;\n  context.width = canvas.width;\n  context.height = canvas.height;\n  var video = document.getElementById(\"video\");\n  var socket = io();\n\n  function logger(msg) {\n    document.querySelector(\".status\").innerText = msg;\n  }\n\n  function loadCam(stream) {\n    video.srcObject = stream; //logger(\"Camara funcionando\");\n    //console.log('camara funcionando');\n  }\n\n  function loadFail() {//logger(\"Camara a fallado reinicia\");\n    //console.log('camara a fallado')\n  }\n\n  function verVideo(video, context) {\n    context.drawImage(video, 0, 0, context.width, context.height);\n    socket.emit(\"stream\", canvas.toDataURL(\"image/webp\"));\n  }\n\n  btn.addEventListener(\"click\", () => {\n    navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msgGetUserMedia;\n\n    if (navigator.getUserMedia) {\n      navigator.getUserMedia({\n        video: true\n      }, loadCam, loadFail);\n    }\n\n    var intervalo = setInterval(() => {\n      verVideo(video, context);\n    }, 500);\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 4\n    }\n  }, \"Streaming de video - emitimos\"), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 4\n    }\n  }, \"Emitir\"), /*#__PURE__*/React.createElement(\"video\", {\n    src: \"\",\n    id: \"video\",\n    style: \"width: 800px; height: 600px\",\n    autoplay: \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(\"canvas\", {\n    ref: \"canvasRef\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 4\n    }\n  }));\n};\n\nexport default text;","map":{"version":3,"sources":["C:/Users/alexa/Documents/Tesis-front/StarterKit/src/pages/Sockets/text.js"],"names":["React","useRef","io","socket","text","canvasRef","canvas","current","context","getContext","btn","document","querySelector","width","height","video","getElementById","logger","msg","innerText","loadCam","stream","srcObject","loadFail","verVideo","drawImage","emit","toDataURL","addEventListener","navigator","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msgGetUserMedia","intervalo","setInterval"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,MAAf,QAA4B,OAA5B;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAClB,QAAMC,SAAS,GAAGJ,MAAM,CAAC,IAAD,CAAxB;AACA,QAAMK,MAAM,GAAGD,SAAS,CAACE,OAAzB;AACA,MAAIC,OAAO,GAAGF,MAAM,CAACG,UAAP,CAAkB,IAAlB,CAAd;AACA,MAAIC,GAAG,GAAGC,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAV;AAEAN,EAAAA,MAAM,CAACO,KAAP,GAAe,GAAf;AACAP,EAAAA,MAAM,CAACQ,MAAP,GAAgB,GAAhB;AAEAN,EAAAA,OAAO,CAACK,KAAR,GAAgBP,MAAM,CAACO,KAAvB;AACAL,EAAAA,OAAO,CAACM,MAAR,GAAiBR,MAAM,CAACQ,MAAxB;AAEA,MAAIC,KAAK,GAAGJ,QAAQ,CAACK,cAAT,CAAwB,OAAxB,CAAZ;AAEA,MAAIb,MAAM,GAAGD,EAAE,EAAf;;AAEA,WAASe,MAAT,CAAgBC,GAAhB,EAAqB;AACpBP,IAAAA,QAAQ,CAACC,aAAT,CAAuB,SAAvB,EAAkCO,SAAlC,GAA8CD,GAA9C;AACA;;AAED,WAASE,OAAT,CAAiBC,MAAjB,EAAyB;AACxBN,IAAAA,KAAK,CAACO,SAAN,GAAkBD,MAAlB,CADwB,CAExB;AACA;AACA;;AAED,WAASE,QAAT,GAAoB,CACnB;AACA;AACA;;AAED,WAASC,QAAT,CAAkBT,KAAlB,EAAyBP,OAAzB,EAAkC;AACjCA,IAAAA,OAAO,CAACiB,SAAR,CAAkBV,KAAlB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+BP,OAAO,CAACK,KAAvC,EAA8CL,OAAO,CAACM,MAAtD;AACAX,IAAAA,MAAM,CAACuB,IAAP,CAAY,QAAZ,EAAsBpB,MAAM,CAACqB,SAAP,CAAiB,YAAjB,CAAtB;AACA;;AAEDjB,EAAAA,GAAG,CAACkB,gBAAJ,CAAqB,OAArB,EAA8B,MAAM;AACnCC,IAAAA,SAAS,CAACC,YAAV,GACCD,SAAS,CAACC,YAAV,IACAD,SAAS,CAACE,kBADV,IAEAF,SAAS,CAACG,eAFV,IAGAH,SAAS,CAACI,eAJX;;AAMA,QAAIJ,SAAS,CAACC,YAAd,EAA4B;AAC3BD,MAAAA,SAAS,CAACC,YAAV,CAAuB;AAACf,QAAAA,KAAK,EAAE;AAAR,OAAvB,EAAsCK,OAAtC,EAA+CG,QAA/C;AACA;;AAED,QAAIW,SAAS,GAAGC,WAAW,CAAC,MAAM;AACjCX,MAAAA,QAAQ,CAACT,KAAD,EAAQP,OAAR,CAAR;AACA,KAF0B,EAExB,GAFwB,CAA3B;AAGA,GAdD;AAeA,sBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADD,eAEC;AAAQ,IAAA,EAAE,EAAC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFD,eAGC;AACC,IAAA,GAAG,EAAC,EADL;AAEC,IAAA,EAAE,EAAC,OAFJ;AAGC,IAAA,KAAK,EAAC,6BAHP;AAIC,IAAA,QAAQ,EAAC,MAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHD,eAQC;AAAQ,IAAA,GAAG,EAAC,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARD,eASC;AAAK,IAAA,KAAK,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATD,CADD;AAaA,CAhED;;AAkEA,eAAeJ,IAAf","sourcesContent":["import React, {useRef} from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport socket from \"./socket\";\r\n\r\nconst text = () => {\r\n\tconst canvasRef = useRef(null);\r\n\tconst canvas = canvasRef.current;\r\n\tvar context = canvas.getContext(\"2d\");\r\n\tvar btn = document.querySelector(\"#btn\");\r\n\r\n\tcanvas.width = 512;\r\n\tcanvas.height = 384;\r\n\r\n\tcontext.width = canvas.width;\r\n\tcontext.height = canvas.height;\r\n\r\n\tvar video = document.getElementById(\"video\");\r\n\r\n\tvar socket = io();\r\n\r\n\tfunction logger(msg) {\r\n\t\tdocument.querySelector(\".status\").innerText = msg;\r\n\t}\r\n\r\n\tfunction loadCam(stream) {\r\n\t\tvideo.srcObject = stream;\r\n\t\t//logger(\"Camara funcionando\");\r\n\t\t//console.log('camara funcionando');\r\n\t}\r\n\r\n\tfunction loadFail() {\r\n\t\t//logger(\"Camara a fallado reinicia\");\r\n\t\t//console.log('camara a fallado')\r\n\t}\r\n\r\n\tfunction verVideo(video, context) {\r\n\t\tcontext.drawImage(video, 0, 0, context.width, context.height);\r\n\t\tsocket.emit(\"stream\", canvas.toDataURL(\"image/webp\"));\r\n\t}\r\n\r\n\tbtn.addEventListener(\"click\", () => {\r\n\t\tnavigator.getUserMedia =\r\n\t\t\tnavigator.getUserMedia ||\r\n\t\t\tnavigator.webkitGetUserMedia ||\r\n\t\t\tnavigator.mozGetUserMedia ||\r\n\t\t\tnavigator.msgGetUserMedia;\r\n\r\n\t\tif (navigator.getUserMedia) {\r\n\t\t\tnavigator.getUserMedia({video: true}, loadCam, loadFail);\r\n\t\t}\r\n\r\n\t\tvar intervalo = setInterval(() => {\r\n\t\t\tverVideo(video, context);\r\n\t\t}, 500);\r\n\t});\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>Streaming de video - emitimos</h1>\r\n\t\t\t<button id=\"btn\">Emitir</button>\r\n\t\t\t<video\r\n\t\t\t\tsrc=\"\"\r\n\t\t\t\tid=\"video\"\r\n\t\t\t\tstyle=\"width: 800px; height: 600px\"\r\n\t\t\t\tautoplay=\"true\"></video>\r\n\t\t\t<canvas ref=\"canvasRef\"></canvas>\r\n\t\t\t<div class=\"status\"></div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default text;\r\n"]},"metadata":{},"sourceType":"module"}