{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexa\\\\Documents\\\\Tesis-front\\\\StarterKit\\\\src\\\\pages\\\\ConfidenceLevels\\\\AddUser.js\";\nimport React, { useState, useContext } from \"react\";\nimport { FormGroup, Label, Input, FormText } from \"reactstrap\";\nimport { AvForm, AvField, AvInput } from \"availity-reactstrap-validation\";\nimport faceContext from \"../../context/face-confidenceLevels/faceContext\";\n\nconst AddUser = () => {\n  // Obtener el state del formulario\n  const facesContext = useContext(faceContext);\n  const {\n    agregarFace,\n    mostrarError\n  } = facesContext; // State para Proyecto\n\n  const [face, guardarFace] = useState({\n    nombre: \"\"\n  }); // Extraer nombre de face\n\n  const {\n    nombre\n  } = face; // Lee los contenidos del input\n\n  const actualizarState = e => {\n    guardarFace({ ...face,\n      [e.target.name]: e.target.value\n    });\n  }; // Cuando el usuario envia un face\n\n\n  const onSubmitFace = e => {\n    e.preventDefault(); // Validar el face\n\n    if (nombre === \"\") {\n      mostrarError();\n      return;\n    } // agregar al state\n\n\n    agregarFace(face); // Reiniciar el form\n\n    guardarFace({\n      nombre: \"\"\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(AvForm, {\n    className: \"needs-validation mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"fullname\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 6\n    }\n  }, \"Nombre completo\"), /*#__PURE__*/React.createElement(AvField, {\n    name: \"fullname\",\n    placeholder: \"Nombre\",\n    type: \"text\",\n    errorMessage: \"Introduce un nombre v\\xE1lido\",\n    className: \"form-control\",\n    validate: {\n      required: {\n        value: true\n      }\n    },\n    id: \"fullname\",\n    onChange: actualizarState,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 6\n    }\n  }))));\n};\n\nexport default AddUser;","map":{"version":3,"sources":["C:/Users/alexa/Documents/Tesis-front/StarterKit/src/pages/ConfidenceLevels/AddUser.js"],"names":["React","useState","useContext","FormGroup","Label","Input","FormText","AvForm","AvField","AvInput","faceContext","AddUser","facesContext","agregarFace","mostrarError","face","guardarFace","nombre","actualizarState","e","target","name","value","onSubmitFace","preventDefault","required"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,QAA0C,OAA1C;AACA,SAAQC,SAAR,EAAmBC,KAAnB,EAA0BC,KAA1B,EAAiCC,QAAjC,QAAgD,YAAhD;AACA,SAAQC,MAAR,EAAgBC,OAAhB,EAAyBC,OAAzB,QAAuC,gCAAvC;AACA,OAAOC,WAAP,MAAwB,iDAAxB;;AAEA,MAAMC,OAAO,GAAG,MAAM;AACrB;AACA,QAAMC,YAAY,GAAGV,UAAU,CAACQ,WAAD,CAA/B;AACA,QAAM;AAACG,IAAAA,WAAD;AAAcC,IAAAA;AAAd,MAA8BF,YAApC,CAHqB,CAKrB;;AACA,QAAM,CAACG,IAAD,EAAOC,WAAP,IAAsBf,QAAQ,CAAC;AACpCgB,IAAAA,MAAM,EAAE;AAD4B,GAAD,CAApC,CANqB,CAUrB;;AACA,QAAM;AAACA,IAAAA;AAAD,MAAWF,IAAjB,CAXqB,CAarB;;AACA,QAAMG,eAAe,GAAIC,CAAD,IAAO;AAC9BH,IAAAA,WAAW,CAAC,EACX,GAAGD,IADQ;AAEX,OAACI,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;AAFf,KAAD,CAAX;AAIA,GALD,CAdqB,CAoBrB;;;AACA,QAAMC,YAAY,GAAIJ,CAAD,IAAO;AAC3BA,IAAAA,CAAC,CAACK,cAAF,GAD2B,CAG3B;;AACA,QAAIP,MAAM,KAAK,EAAf,EAAmB;AAClBH,MAAAA,YAAY;AACZ;AACA,KAP0B,CAS3B;;;AACAD,IAAAA,WAAW,CAACE,IAAD,CAAX,CAV2B,CAY3B;;AACAC,IAAAA,WAAW,CAAC;AACXC,MAAAA,MAAM,EAAE;AADG,KAAD,CAAX;AAGA,GAhBD;;AAkBA,sBACC,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,uBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADD,eAEC,oBAAC,OAAD;AACC,IAAA,IAAI,EAAC,UADN;AAEC,IAAA,WAAW,EAAC,QAFb;AAGC,IAAA,IAAI,EAAC,MAHN;AAIC,IAAA,YAAY,EAAC,+BAJd;AAKC,IAAA,SAAS,EAAC,cALX;AAMC,IAAA,QAAQ,EAAE;AAACQ,MAAAA,QAAQ,EAAE;AAACH,QAAAA,KAAK,EAAE;AAAR;AAAX,KANX;AAOC,IAAA,EAAE,EAAC,UAPJ;AAQC,IAAA,QAAQ,EAAEJ,eARX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,CADD,CADD,CADD;AAmBA,CA1DD;;AA4DA,eAAeP,OAAf","sourcesContent":["import React, {useState, useContext} from \"react\";\r\nimport {FormGroup, Label, Input, FormText} from \"reactstrap\";\r\nimport {AvForm, AvField, AvInput} from \"availity-reactstrap-validation\";\r\nimport faceContext from \"../../context/face-confidenceLevels/faceContext\";\r\n\r\nconst AddUser = () => {\r\n\t// Obtener el state del formulario\r\n\tconst facesContext = useContext(faceContext);\r\n\tconst {agregarFace, mostrarError} = facesContext;\r\n\r\n\t// State para Proyecto\r\n\tconst [face, guardarFace] = useState({\r\n\t\tnombre: \"\",\r\n\t});\r\n\r\n\t// Extraer nombre de face\r\n\tconst {nombre} = face;\r\n\r\n\t// Lee los contenidos del input\r\n\tconst actualizarState = (e) => {\r\n\t\tguardarFace({\r\n\t\t\t...face,\r\n\t\t\t[e.target.name]: e.target.value,\r\n\t\t});\r\n\t};\r\n\t// Cuando el usuario envia un face\r\n\tconst onSubmitFace = (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\t// Validar el face\r\n\t\tif (nombre === \"\") {\r\n\t\t\tmostrarError();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// agregar al state\r\n\t\tagregarFace(face);\r\n\r\n\t\t// Reiniciar el form\r\n\t\tguardarFace({\r\n\t\t\tnombre: \"\",\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<AvForm className=\"needs-validation mt-3\">\r\n\t\t\t\t<FormGroup>\r\n\t\t\t\t\t<Label for=\"fullname\">Nombre completo</Label>\r\n\t\t\t\t\t<AvField\r\n\t\t\t\t\t\tname=\"fullname\"\r\n\t\t\t\t\t\tplaceholder=\"Nombre\"\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\terrorMessage=\"Introduce un nombre vÃ¡lido\"\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\tvalidate={{required: {value: true}}}\r\n\t\t\t\t\t\tid=\"fullname\"\r\n\t\t\t\t\t\tonChange={actualizarState}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</FormGroup>\r\n\t\t\t</AvForm>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nexport default AddUser;\r\n"]},"metadata":{},"sourceType":"module"}