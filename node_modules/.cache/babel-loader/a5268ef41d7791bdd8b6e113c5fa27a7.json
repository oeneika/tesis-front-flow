{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexa\\\\Documents\\\\Tesis-front\\\\StarterKit\\\\src\\\\pages\\\\ConfidenceLevels\\\\GetUsers.js\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Row, Col, CardBody, Modal, CardTitle, CardImg, Button, CardText, ModalHeader, ModalBody, FormGroup, ModalFooter } from \"reactstrap\";\nimport { AvForm, AvField, AvInput, AvSelect, AvRadioGroup, AvRadio } from \"availity-reactstrap-validation\"; //Import Images\n\nimport img2 from \"../../assets/images/small/img-2.jpg\";\nimport faceContext from \"../../context/face/faceContext\";\n\nconst GetUsers = () => {\n  const [modal, setModal] = useState(false);\n\n  const toggle = () => setModal(!modal);\n\n  const facesContext = useContext(faceContext);\n  const {\n    faceByConfidenceLevel,\n    faces_filtrados\n  } = facesContext;\n  const [list, setList] = useState([]);\n  useEffect(() => {\n    faceByConfidenceLevel(id);\n  }, []);\n\n  if (faces_filtrados) {\n    console.log(faces_filtrados);\n  }\n  /*Creacion del objeto usuario */\n\n\n  const [usuario, actualizarUsuario] = useState({\n    _id: id,\n    name: \"\",\n    surname: \"\",\n    age: \"\",\n    gender: \"\",\n    confidenceLevels: \"\",\n    image: \"\"\n  }); // Lee los contenidos del input\n\n  const onChange = e => {\n    actualizarUsuario({ ...usuario,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const onSubmitUsuario = e => {\n    //actualizarFace(usuario);\n    toggle();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 3\n    }\n  }, faces_filtrados.map(item => /*#__PURE__*/React.createElement(\"li\", {\n    key: item._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, item.name, \" \", item.surname)));\n};\n\nexport default GetUsers;","map":{"version":3,"sources":["C:/Users/alexa/Documents/Tesis-front/StarterKit/src/pages/ConfidenceLevels/GetUsers.js"],"names":["React","useContext","useEffect","useState","Row","Col","CardBody","Modal","CardTitle","CardImg","Button","CardText","ModalHeader","ModalBody","FormGroup","ModalFooter","AvForm","AvField","AvInput","AvSelect","AvRadioGroup","AvRadio","img2","faceContext","GetUsers","modal","setModal","toggle","facesContext","faceByConfidenceLevel","faces_filtrados","list","setList","id","console","log","usuario","actualizarUsuario","_id","name","surname","age","gender","confidenceLevels","image","onChange","e","target","value","onSubmitUsuario","map","item"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAqD,OAArD;AACA,SACCC,GADD,EAECC,GAFD,EAGCC,QAHD,EAICC,KAJD,EAKCC,SALD,EAMCC,OAND,EAOCC,MAPD,EAQCC,QARD,EASCC,WATD,EAUCC,SAVD,EAWCC,SAXD,EAYCC,WAZD,QAaO,YAbP;AAcA,SACCC,MADD,EAECC,OAFD,EAGCC,OAHD,EAICC,QAJD,EAKCC,YALD,EAMCC,OAND,QAOO,gCAPP,C,CAQA;;AACA,OAAOC,IAAP,MAAiB,qCAAjB;AACA,OAAOC,WAAP,MAAwB,gCAAxB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACtB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBvB,QAAQ,CAAC,KAAD,CAAlC;;AACA,QAAMwB,MAAM,GAAG,MAAMD,QAAQ,CAAC,CAACD,KAAF,CAA7B;;AAEA,QAAMG,YAAY,GAAG3B,UAAU,CAACsB,WAAD,CAA/B;AACA,QAAM;AAACM,IAAAA,qBAAD;AAAwBC,IAAAA;AAAxB,MAA2CF,YAAjD;AAEA,QAAM,CAACG,IAAD,EAAOC,OAAP,IAAkB7B,QAAQ,CAAC,EAAD,CAAhC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACf2B,IAAAA,qBAAqB,CAACI,EAAD,CAArB;AACA,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAIH,eAAJ,EAAqB;AACpBI,IAAAA,OAAO,CAACC,GAAR,CAAYL,eAAZ;AACA;AAED;;;AACA,QAAM,CAACM,OAAD,EAAUC,iBAAV,IAA+BlC,QAAQ,CAAC;AAC7CmC,IAAAA,GAAG,EAAEL,EADwC;AAE7CM,IAAAA,IAAI,EAAE,EAFuC;AAG7CC,IAAAA,OAAO,EAAE,EAHoC;AAI7CC,IAAAA,GAAG,EAAE,EAJwC;AAK7CC,IAAAA,MAAM,EAAE,EALqC;AAM7CC,IAAAA,gBAAgB,EAAE,EAN2B;AAO7CC,IAAAA,KAAK,EAAE;AAPsC,GAAD,CAA7C,CAjBsB,CA2BtB;;AACA,QAAMC,QAAQ,GAAIC,CAAD,IAAO;AACvBT,IAAAA,iBAAiB,CAAC,EACjB,GAAGD,OADc;AAEjB,OAACU,CAAC,CAACC,MAAF,CAASR,IAAV,GAAiBO,CAAC,CAACC,MAAF,CAASC;AAFT,KAAD,CAAjB;AAIA,GALD;;AAOA,QAAMC,eAAe,GAAIH,CAAD,IAAO;AAC9B;AACAnB,IAAAA,MAAM;AACN,GAHD;;AAKA,sBACC;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEG,eAAe,CAACoB,GAAhB,CAAqBC,IAAD,iBACpB;AAAI,IAAA,GAAG,EAAEA,IAAI,CAACb,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEa,IAAI,CAACZ,IADP,OACcY,IAAI,CAACX,OADnB,CADA,CADF,CADD;AASA,CAjDD;;AAmDA,eAAehB,QAAf","sourcesContent":["import React, {useContext, useEffect, useState} from \"react\";\r\nimport {\r\n\tRow,\r\n\tCol,\r\n\tCardBody,\r\n\tModal,\r\n\tCardTitle,\r\n\tCardImg,\r\n\tButton,\r\n\tCardText,\r\n\tModalHeader,\r\n\tModalBody,\r\n\tFormGroup,\r\n\tModalFooter,\r\n} from \"reactstrap\";\r\nimport {\r\n\tAvForm,\r\n\tAvField,\r\n\tAvInput,\r\n\tAvSelect,\r\n\tAvRadioGroup,\r\n\tAvRadio,\r\n} from \"availity-reactstrap-validation\";\r\n//Import Images\r\nimport img2 from \"../../assets/images/small/img-2.jpg\";\r\nimport faceContext from \"../../context/face/faceContext\";\r\n\r\nconst GetUsers = () => {\r\n\tconst [modal, setModal] = useState(false);\r\n\tconst toggle = () => setModal(!modal);\r\n\r\n\tconst facesContext = useContext(faceContext);\r\n\tconst {faceByConfidenceLevel, faces_filtrados} = facesContext;\r\n\r\n\tconst [list, setList] = useState([]);\r\n\tuseEffect(() => {\r\n\t\tfaceByConfidenceLevel(id);\r\n\t}, []);\r\n\r\n\tif (faces_filtrados) {\r\n\t\tconsole.log(faces_filtrados);\r\n\t}\r\n\r\n\t/*Creacion del objeto usuario */\r\n\tconst [usuario, actualizarUsuario] = useState({\r\n\t\t_id: id,\r\n\t\tname: \"\",\r\n\t\tsurname: \"\",\r\n\t\tage: \"\",\r\n\t\tgender: \"\",\r\n\t\tconfidenceLevels: \"\",\r\n\t\timage: \"\",\r\n\t});\r\n\r\n\t// Lee los contenidos del input\r\n\tconst onChange = (e) => {\r\n\t\tactualizarUsuario({\r\n\t\t\t...usuario,\r\n\t\t\t[e.target.name]: e.target.value,\r\n\t\t});\r\n\t};\r\n\r\n\tconst onSubmitUsuario = (e) => {\r\n\t\t//actualizarFace(usuario);\r\n\t\ttoggle();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"wrapper\">\r\n\t\t\t{faces_filtrados.map((item) => (\r\n\t\t\t\t<li key={item._id}>\r\n\t\t\t\t\t{item.name} {item.surname}\r\n\t\t\t\t</li>\r\n\t\t\t))}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default GetUsers;\r\n"]},"metadata":{},"sourceType":"module"}