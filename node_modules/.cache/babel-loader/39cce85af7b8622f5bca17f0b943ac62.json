{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexa\\\\Documents\\\\Tesis-front\\\\StarterKit\\\\src\\\\context\\\\face\\\\faceState.js\";\nimport React, { useReducer } from \"react\";\nimport faceContext from \"./faceContext\";\nimport faceReducer from \"./faceReducer\";\nimport { OBTENER_FACES, AGREGAR_FACE, AGREGAR_FOTO, FACE_ACTUAL, ELIMINAR_FACE, ACTUALIZAR_FACE } from \"../../types\";\nimport clienteAxios from \"../../config/axios\";\n\nconst FaceState = props => {\n  const faces = [{\n    id: 1,\n    nombre: \"Tienda Virtual\"\n  }, {\n    id: 2,\n    nombre: \"Intranet\"\n  }, {\n    id: 3,\n    nombre: \"Diseño de Sitio web\"\n  }, {\n    id: 4,\n    nombre: \"MERN \"\n  }];\n  const initialState = {\n    faces: [],\n    face: null\n  }; // Dispatch para ejecutar las acciones\n\n  const [state, dispatch] = useReducer(faceReducer, initialState); // Obtener los faces\n\n  const obtenerFaces = async () => {\n    try {\n      const resultado = await clienteAxios.get(\"/api/faces\");\n      dispatch({\n        type: OBTENER_FACES,\n        payload: resultado.data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }; // Agregar nuevo faces\n\n\n  const agregarFace = async face => {\n    try {\n      const resultado = await clienteAxios.post(\"/api/save-face\", face);\n      console.log(resultado); //agregarFoto(resultado.data);\n      // Insertar el faces en el state\n\n      dispatch({\n        type: AGREGAR_FACE,\n        payload: resultado.data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }; // Agregar nuevo faces\n\n\n  const agregarFoto = async face => {\n    console.log(face);\n\n    try {\n      const resultado = await clienteAxios.post(`/api/upload-image-face/${face.id}`, face.image);\n      console.log(resultado); // Insertar el faces en el state\n\n      dispatch({\n        type: AGREGAR_FOTO,\n        payload: resultado.data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }; // Selecciona el Proyecto que el usuario dio click\n\n\n  const faceActual = faceId => {\n    dispatch({\n      type: FACE_ACTUAL,\n      payload: faceId\n    });\n  };\n\n  const actualizarFace = async faceId => {\n    try {\n      await clienteAxios.put(`/api/face/${faceId}`);\n      dispatch({\n        type: ACTUALIZAR_FACE,\n        payload: faceId\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }; // Elimina un faces\n\n\n  const eliminarFace = async faceId => {\n    try {\n      await clienteAxios.delete(`/api/face/${faceId}`);\n      dispatch({\n        type: ELIMINAR_FACE,\n        payload: faceId\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(faceContext.Provider, {\n    value: {\n      faces: state.faces,\n      faces: state.faces,\n      obtenerFaces,\n      agregarFace,\n      agregarFoto,\n      faceActual,\n      actualizarFace,\n      eliminarFace\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 3\n    }\n  }, props.children);\n};\n\nexport default FaceState;","map":{"version":3,"sources":["C:/Users/alexa/Documents/Tesis-front/StarterKit/src/context/face/faceState.js"],"names":["React","useReducer","faceContext","faceReducer","OBTENER_FACES","AGREGAR_FACE","AGREGAR_FOTO","FACE_ACTUAL","ELIMINAR_FACE","ACTUALIZAR_FACE","clienteAxios","FaceState","props","faces","id","nombre","initialState","face","state","dispatch","obtenerFaces","resultado","get","type","payload","data","error","console","log","agregarFace","post","agregarFoto","image","faceActual","faceId","actualizarFace","put","eliminarFace","delete","children"],"mappings":"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","sourcesContent":["import React, {useReducer} from \"react\";\r\n\r\nimport faceContext from \"./faceContext\";\r\nimport faceReducer from \"./faceReducer\";\r\nimport {\r\n\tOBTENER_FACES,\r\n\tAGREGAR_FACE,\r\n\tAGREGAR_FOTO,\r\n\tFACE_ACTUAL,\r\n\tELIMINAR_FACE,\r\n\tACTUALIZAR_FACE,\r\n} from \"../../types\";\r\n\r\nimport clienteAxios from \"../../config/axios\";\r\n\r\nconst FaceState = (props) => {\r\n\tconst faces = [\r\n\t\t{id: 1, nombre: \"Tienda Virtual\"},\r\n\t\t{id: 2, nombre: \"Intranet\"},\r\n\t\t{id: 3, nombre: \"Diseño de Sitio web\"},\r\n\t\t{id: 4, nombre: \"MERN \"},\r\n\t];\r\n\r\n\tconst initialState = {\r\n\t\tfaces: [],\r\n\t\tface: null,\r\n\t};\r\n\r\n\t// Dispatch para ejecutar las acciones\r\n\tconst [state, dispatch] = useReducer(faceReducer, initialState);\r\n\r\n\t// Obtener los faces\r\n\tconst obtenerFaces = async () => {\r\n\t\ttry {\r\n\t\t\tconst resultado = await clienteAxios.get(\"/api/faces\");\r\n\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: OBTENER_FACES,\r\n\t\t\t\tpayload: resultado.data,\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\r\n\t// Agregar nuevo faces\r\n\tconst agregarFace = async (face) => {\r\n\t\ttry {\r\n\t\t\tconst resultado = await clienteAxios.post(\"/api/save-face\", face);\r\n\t\t\tconsole.log(resultado);\r\n\t\t\t//agregarFoto(resultado.data);\r\n\t\t\t// Insertar el faces en el state\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: AGREGAR_FACE,\r\n\t\t\t\tpayload: resultado.data,\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\r\n\t// Agregar nuevo faces\r\n\tconst agregarFoto = async (face) => {\r\n\t\tconsole.log(face);\r\n\t\ttry {\r\n\t\t\tconst resultado = await clienteAxios.post(\r\n\t\t\t\t`/api/upload-image-face/${face.id}`,\r\n\t\t\t\tface.image\r\n\t\t\t);\r\n\t\t\tconsole.log(resultado);\r\n\t\t\t// Insertar el faces en el state\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: AGREGAR_FOTO,\r\n\t\t\t\tpayload: resultado.data,\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\r\n\t// Selecciona el Proyecto que el usuario dio click\r\n\tconst faceActual = (faceId) => {\r\n\t\tdispatch({\r\n\t\t\ttype: FACE_ACTUAL,\r\n\t\t\tpayload: faceId,\r\n\t\t});\r\n\t};\r\n\r\n\tconst actualizarFace = async (faceId) => {\r\n\t\ttry {\r\n\t\t\tawait clienteAxios.put(`/api/face/${faceId}`);\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: ACTUALIZAR_FACE,\r\n\t\t\t\tpayload: faceId,\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\r\n\t// Elimina un faces\r\n\tconst eliminarFace = async (faceId) => {\r\n\t\ttry {\r\n\t\t\tawait clienteAxios.delete(`/api/face/${faceId}`);\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: ELIMINAR_FACE,\r\n\t\t\t\tpayload: faceId,\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<faceContext.Provider\r\n\t\t\tvalue={{\r\n\t\t\t\tfaces: state.faces,\r\n\t\t\t\tfaces: state.faces,\r\n\t\t\t\tobtenerFaces,\r\n\t\t\t\tagregarFace,\r\n\t\t\t\tagregarFoto,\r\n\t\t\t\tfaceActual,\r\n\t\t\t\tactualizarFace,\r\n\t\t\t\teliminarFace,\r\n\t\t\t}}>\r\n\t\t\t{props.children}\r\n\t\t</faceContext.Provider>\r\n\t);\r\n};\r\n\r\nexport default FaceState;\r\n"]},"metadata":{},"sourceType":"module"}