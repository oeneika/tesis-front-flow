{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexa\\\\Documents\\\\Tesis-front\\\\StarterKit\\\\src\\\\context\\\\autenticacion\\\\authState.js\";\nimport React, { useReducer } from \"react\";\nimport AuthContext from \"./authContext\";\nimport AuthReducer from \"./authReducer\";\nimport clienteAxios from \"../../config/axios\";\nimport tokenAuth from \"../../config/token\";\nimport { REGISTRO_EXITOSO, ACTUALIZAR_USUARIO, OBTENER_USUARIO, LOGIN_EXITOSO, LOGIN_ERROR, CERRAR_SESION, OBTENER_DATOS_USUARIO } from \"../../types\";\n\nconst AuthState = props => {\n  const initialState = {\n    token: localStorage.getItem(\"token\"),\n    autenticado: null,\n    usuario: null,\n    mensaje: null,\n    cargando: true\n  };\n  console[(id, setId)] = useState(\"\");\n  const [state, dispatch] = useReducer(AuthReducer, initialState);\n\n  const registrarUsuario = async body => {\n    console.log(body);\n\n    try {\n      const respuesta = await clienteAxios.post(\"/api/register\", body);\n      console.log(respuesta.data);\n      dispatch({\n        type: REGISTRO_EXITOSO,\n        payload: respuesta.data.token\n      });\n      setId(respuesta.data.id);\n      usuarioAutenticado();\n    } catch (error) {// console.log(error.response.data.msg);\n    }\n  }; // Retorna el usuario autenticado\n\n\n  const usuarioAutenticado = async () => {\n    const token = localStorage.getItem(\"token\");\n\n    if (token) {\n      tokenAuth(token);\n    }\n\n    try {\n      const respuesta = await clienteAxios.get(\"/api/auth-user\");\n      dispatch({\n        type: OBTENER_USUARIO,\n        payload: respuesta.data.user\n      });\n    } catch (error) {\n      dispatch({\n        type: LOGIN_ERROR\n      });\n    }\n  };\n\n  const obtenerUsuario = async usuarioId => {\n    console.log(usuarioId);\n\n    try {\n      const respuesta = await clienteAxios.get(\"/api/get-user\", {\n        params: {\n          usuarioId\n        }\n      });\n      dispatch({\n        type: OBTENER_DATOS_USUARIO,\n        payload: respuesta.data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const actualizarUsuario = async body => {\n    console.log(body);\n\n    try {\n      /*\r\n      const respuesta = await clienteAxios.post(`/api/update-user/`, body);\r\n      dispatch({\r\n      \ttype: ACTUALIZAR_USUARIO,\r\n      \tpayload: respuesta.data.token,\r\n      });\r\n      */\n    } catch (error) {// console.log(error.response.data.msg);\n    }\n  }; // Cuando el usuario inicia sesión\n\n\n  const iniciarSesion = async datos => {\n    let payload = datos;\n    payload.gethash = true;\n\n    try {\n      const respuesta = await clienteAxios.post(\"/api/login\", payload);\n      dispatch({\n        type: LOGIN_EXITOSO,\n        payload: respuesta.data.token\n      });\n      usuarioAutenticado();\n    } catch (error) {}\n  }; //Cerrar sesion del usuario\n  // Cierra la sesión del usuario\n\n\n  const cerrarSesion = () => {\n    dispatch({\n      type: CERRAR_SESION\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: {\n      token: state.token,\n      autenticado: state.autenticado,\n      usuario: state.usuario,\n      mensaje: state.mensaje,\n      cargando: state.cargando,\n      registrarUsuario,\n      iniciarSesion,\n      usuarioAutenticado,\n      cerrarSesion,\n      actualizarUsuario,\n      obtenerUsuario\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 3\n    }\n  }, props.children);\n};\n\nexport default AuthState;","map":{"version":3,"sources":["C:/Users/alexa/Documents/Tesis-front/StarterKit/src/context/autenticacion/authState.js"],"names":["React","useReducer","AuthContext","AuthReducer","clienteAxios","tokenAuth","REGISTRO_EXITOSO","ACTUALIZAR_USUARIO","OBTENER_USUARIO","LOGIN_EXITOSO","LOGIN_ERROR","CERRAR_SESION","OBTENER_DATOS_USUARIO","AuthState","props","initialState","token","localStorage","getItem","autenticado","usuario","mensaje","cargando","console","id","setId","useState","state","dispatch","registrarUsuario","body","log","respuesta","post","data","type","payload","usuarioAutenticado","error","get","user","obtenerUsuario","usuarioId","params","actualizarUsuario","iniciarSesion","datos","gethash","cerrarSesion","children"],"mappings":"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","sourcesContent":["import React, {useReducer} from \"react\";\r\nimport AuthContext from \"./authContext\";\r\nimport AuthReducer from \"./authReducer\";\r\n\r\nimport clienteAxios from \"../../config/axios\";\r\nimport tokenAuth from \"../../config/token\";\r\n\r\nimport {\r\n\tREGISTRO_EXITOSO,\r\n\tACTUALIZAR_USUARIO,\r\n\tOBTENER_USUARIO,\r\n\tLOGIN_EXITOSO,\r\n\tLOGIN_ERROR,\r\n\tCERRAR_SESION,\r\n\tOBTENER_DATOS_USUARIO,\r\n} from \"../../types\";\r\n\r\nconst AuthState = (props) => {\r\n\tconst initialState = {\r\n\t\ttoken: localStorage.getItem(\"token\"),\r\n\t\tautenticado: null,\r\n\t\tusuario: null,\r\n\t\tmensaje: null,\r\n\t\tcargando: true,\r\n\t};\r\n\r\n\tconsole[(id, setId)] = useState(\"\");\r\n\r\n\tconst [state, dispatch] = useReducer(AuthReducer, initialState);\r\n\r\n\tconst registrarUsuario = async (body) => {\r\n\t\tconsole.log(body);\r\n\t\ttry {\r\n\t\t\tconst respuesta = await clienteAxios.post(\"/api/register\", body);\r\n\t\t\tconsole.log(respuesta.data);\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: REGISTRO_EXITOSO,\r\n\t\t\t\tpayload: respuesta.data.token,\r\n\t\t\t});\r\n\t\t\tsetId(respuesta.data.id);\r\n\t\t\tusuarioAutenticado();\r\n\t\t} catch (error) {\r\n\t\t\t// console.log(error.response.data.msg);\r\n\t\t}\r\n\t};\r\n\r\n\t// Retorna el usuario autenticado\r\n\tconst usuarioAutenticado = async () => {\r\n\t\tconst token = localStorage.getItem(\"token\");\r\n\r\n\t\tif (token) {\r\n\t\t\ttokenAuth(token);\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tconst respuesta = await clienteAxios.get(\"/api/auth-user\");\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: OBTENER_USUARIO,\r\n\t\t\t\tpayload: respuesta.data.user,\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: LOGIN_ERROR,\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tconst obtenerUsuario = async (usuarioId) => {\r\n\t\tconsole.log(usuarioId);\r\n\t\ttry {\r\n\t\t\tconst respuesta = await clienteAxios.get(\"/api/get-user\", {\r\n\t\t\t\tparams: {usuarioId},\r\n\t\t\t});\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: OBTENER_DATOS_USUARIO,\r\n\t\t\t\tpayload: respuesta.data,\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\r\n\tconst actualizarUsuario = async (body) => {\r\n\t\tconsole.log(body);\r\n\t\ttry {\r\n\t\t\t/*\r\n\t\t\tconst respuesta = await clienteAxios.post(`/api/update-user/`, body);\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: ACTUALIZAR_USUARIO,\r\n\t\t\t\tpayload: respuesta.data.token,\r\n\t\t\t});\r\n\t\t\t*/\r\n\t\t} catch (error) {\r\n\t\t\t// console.log(error.response.data.msg);\r\n\t\t}\r\n\t};\r\n\r\n\t// Cuando el usuario inicia sesión\r\n\tconst iniciarSesion = async (datos) => {\r\n\t\tlet payload = datos;\r\n\t\tpayload.gethash = true;\r\n\t\ttry {\r\n\t\t\tconst respuesta = await clienteAxios.post(\"/api/login\", payload);\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: LOGIN_EXITOSO,\r\n\t\t\t\tpayload: respuesta.data.token,\r\n\t\t\t});\r\n\t\t\tusuarioAutenticado();\r\n\t\t} catch (error) {}\r\n\t};\r\n\r\n\t//Cerrar sesion del usuario\r\n\t// Cierra la sesión del usuario\r\n\tconst cerrarSesion = () => {\r\n\t\tdispatch({\r\n\t\t\ttype: CERRAR_SESION,\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<AuthContext.Provider\r\n\t\t\tvalue={{\r\n\t\t\t\ttoken: state.token,\r\n\t\t\t\tautenticado: state.autenticado,\r\n\t\t\t\tusuario: state.usuario,\r\n\t\t\t\tmensaje: state.mensaje,\r\n\t\t\t\tcargando: state.cargando,\r\n\t\t\t\tregistrarUsuario,\r\n\t\t\t\tiniciarSesion,\r\n\t\t\t\tusuarioAutenticado,\r\n\t\t\t\tcerrarSesion,\r\n\t\t\t\tactualizarUsuario,\r\n\t\t\t\tobtenerUsuario,\r\n\t\t\t}}>\r\n\t\t\t{props.children}\r\n\t\t</AuthContext.Provider>\r\n\t);\r\n};\r\nexport default AuthState;\r\n"]},"metadata":{},"sourceType":"module"}