{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexa\\\\Documents\\\\Tesis-front\\\\StarterKit\\\\src\\\\context\\\\face\\\\faceState.js\";\nimport React, { useReducer } from \"react\";\nimport faceContext from \"./faceContext\";\nimport faceReducer from \"./faceReducer\";\nimport { OBTENER_FACES, AGREGAR_FACE, FACE_ACTUAL, ELIMINAR_FACE } from \"../../types\";\nimport clienteAxios from \"../../config/axios\";\n\nconst FaceState = props => {\n  const faces = [{\n    id: 1,\n    nombre: \"Tienda Virtual\"\n  }, {\n    id: 2,\n    nombre: \"Intranet\"\n  }, {\n    id: 3,\n    nombre: \"Diseño de Sitio web\"\n  }, {\n    id: 4,\n    nombre: \"MERN \"\n  }];\n  const initialState = {\n    faces: [],\n    face: null\n  }; // Dispatch para ejecutar las acciones\n\n  const [state, dispatch] = useReducer(faceReducer, initialState); // Obtener los proyectos\n\n  const obtenerFaces = () => {\n    dispatch({\n      type: OBTENER_FACES,\n      payload: faces\n    });\n  }; // Agregar nuevo proyecto\n\n\n  const agregarFace = async proyecto => {\n    try {\n      const resultado = await clienteAxios.post(\"/api/faces\", proyecto);\n      console.log(resultado); // Insertar el proyecto en el state\n\n      dispatch({\n        type: AGREGAR_FACE,\n        payload: resultado.data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }; // Selecciona el Proyecto que el usuario dio click\n\n\n  const faceActual = faceId => {\n    dispatch({\n      type: FACE_ACTUAL,\n      payload: faceId\n    });\n  }; // Elimina un proyecto\n\n\n  const eliminarFace = faceId => {\n    dispatch({\n      type: ELIMINAR_FACE,\n      payload: faceId\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(faceContext.Provider, {\n    value: {\n      proyectos: state.proyectos,\n      proyecto: state.proyecto,\n      obtenerProyectos,\n      agregarProyecto,\n      proyectoActual,\n      eliminarProyecto\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 3\n    }\n  }, props.children);\n};\n\nexport default FaceState;","map":{"version":3,"sources":["C:/Users/alexa/Documents/Tesis-front/StarterKit/src/context/face/faceState.js"],"names":["React","useReducer","faceContext","faceReducer","OBTENER_FACES","AGREGAR_FACE","FACE_ACTUAL","ELIMINAR_FACE","clienteAxios","FaceState","props","faces","id","nombre","initialState","face","state","dispatch","obtenerFaces","type","payload","agregarFace","proyecto","resultado","post","console","log","data","error","faceActual","faceId","eliminarFace","proyectos","obtenerProyectos","agregarProyecto","proyectoActual","eliminarProyecto","children"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SACCC,aADD,EAECC,YAFD,EAGCC,WAHD,EAICC,aAJD,QAKO,aALP;AAOA,OAAOC,YAAP,MAAyB,oBAAzB;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAC5B,QAAMC,KAAK,GAAG,CACb;AAACC,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,MAAM,EAAE;AAAhB,GADa,EAEb;AAACD,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,MAAM,EAAE;AAAhB,GAFa,EAGb;AAACD,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,MAAM,EAAE;AAAhB,GAHa,EAIb;AAACD,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,MAAM,EAAE;AAAhB,GAJa,CAAd;AAOA,QAAMC,YAAY,GAAG;AACpBH,IAAAA,KAAK,EAAE,EADa;AAEpBI,IAAAA,IAAI,EAAE;AAFc,GAArB,CAR4B,CAa5B;;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBhB,UAAU,CAACE,WAAD,EAAcW,YAAd,CAApC,CAd4B,CAgB5B;;AACA,QAAMI,YAAY,GAAG,MAAM;AAC1BD,IAAAA,QAAQ,CAAC;AACRE,MAAAA,IAAI,EAAEf,aADE;AAERgB,MAAAA,OAAO,EAAET;AAFD,KAAD,CAAR;AAIA,GALD,CAjB4B,CAwB5B;;;AACA,QAAMU,WAAW,GAAG,MAAOC,QAAP,IAAoB;AACvC,QAAI;AACH,YAAMC,SAAS,GAAG,MAAMf,YAAY,CAACgB,IAAb,CAAkB,YAAlB,EAAgCF,QAAhC,CAAxB;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ,EAFG,CAGH;;AACAN,MAAAA,QAAQ,CAAC;AACRE,QAAAA,IAAI,EAAEd,YADE;AAERe,QAAAA,OAAO,EAAEG,SAAS,CAACI;AAFX,OAAD,CAAR;AAIA,KARD,CAQE,OAAOC,KAAP,EAAc;AACfH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACA;AACD,GAZD,CAzB4B,CAuC5B;;;AACA,QAAMC,UAAU,GAAIC,MAAD,IAAY;AAC9Bb,IAAAA,QAAQ,CAAC;AACRE,MAAAA,IAAI,EAAEb,WADE;AAERc,MAAAA,OAAO,EAAEU;AAFD,KAAD,CAAR;AAIA,GALD,CAxC4B,CA+C5B;;;AACA,QAAMC,YAAY,GAAID,MAAD,IAAY;AAChCb,IAAAA,QAAQ,CAAC;AACRE,MAAAA,IAAI,EAAEZ,aADE;AAERa,MAAAA,OAAO,EAAEU;AAFD,KAAD,CAAR;AAIA,GALD;;AAOA,sBACC,oBAAC,WAAD,CAAa,QAAb;AACC,IAAA,KAAK,EAAE;AACNE,MAAAA,SAAS,EAAEhB,KAAK,CAACgB,SADX;AAENV,MAAAA,QAAQ,EAAEN,KAAK,CAACM,QAFV;AAGNW,MAAAA,gBAHM;AAINC,MAAAA,eAJM;AAKNC,MAAAA,cALM;AAMNC,MAAAA;AANM,KADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASE1B,KAAK,CAAC2B,QATR,CADD;AAaA,CApED;;AAsEA,eAAe5B,SAAf","sourcesContent":["import React, {useReducer} from \"react\";\r\n\r\nimport faceContext from \"./faceContext\";\r\nimport faceReducer from \"./faceReducer\";\r\nimport {\r\n\tOBTENER_FACES,\r\n\tAGREGAR_FACE,\r\n\tFACE_ACTUAL,\r\n\tELIMINAR_FACE,\r\n} from \"../../types\";\r\n\r\nimport clienteAxios from \"../../config/axios\";\r\n\r\nconst FaceState = (props) => {\r\n\tconst faces = [\r\n\t\t{id: 1, nombre: \"Tienda Virtual\"},\r\n\t\t{id: 2, nombre: \"Intranet\"},\r\n\t\t{id: 3, nombre: \"Diseño de Sitio web\"},\r\n\t\t{id: 4, nombre: \"MERN \"},\r\n\t];\r\n\r\n\tconst initialState = {\r\n\t\tfaces: [],\r\n\t\tface: null,\r\n\t};\r\n\r\n\t// Dispatch para ejecutar las acciones\r\n\tconst [state, dispatch] = useReducer(faceReducer, initialState);\r\n\r\n\t// Obtener los proyectos\r\n\tconst obtenerFaces = () => {\r\n\t\tdispatch({\r\n\t\t\ttype: OBTENER_FACES,\r\n\t\t\tpayload: faces,\r\n\t\t});\r\n\t};\r\n\r\n\t// Agregar nuevo proyecto\r\n\tconst agregarFace = async (proyecto) => {\r\n\t\ttry {\r\n\t\t\tconst resultado = await clienteAxios.post(\"/api/faces\", proyecto);\r\n\t\t\tconsole.log(resultado);\r\n\t\t\t// Insertar el proyecto en el state\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: AGREGAR_FACE,\r\n\t\t\t\tpayload: resultado.data,\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\r\n\t// Selecciona el Proyecto que el usuario dio click\r\n\tconst faceActual = (faceId) => {\r\n\t\tdispatch({\r\n\t\t\ttype: FACE_ACTUAL,\r\n\t\t\tpayload: faceId,\r\n\t\t});\r\n\t};\r\n\r\n\t// Elimina un proyecto\r\n\tconst eliminarFace = (faceId) => {\r\n\t\tdispatch({\r\n\t\t\ttype: ELIMINAR_FACE,\r\n\t\t\tpayload: faceId,\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<faceContext.Provider\r\n\t\t\tvalue={{\r\n\t\t\t\tproyectos: state.proyectos,\r\n\t\t\t\tproyecto: state.proyecto,\r\n\t\t\t\tobtenerProyectos,\r\n\t\t\t\tagregarProyecto,\r\n\t\t\t\tproyectoActual,\r\n\t\t\t\teliminarProyecto,\r\n\t\t\t}}>\r\n\t\t\t{props.children}\r\n\t\t</faceContext.Provider>\r\n\t);\r\n};\r\n\r\nexport default FaceState;\r\n"]},"metadata":{},"sourceType":"module"}