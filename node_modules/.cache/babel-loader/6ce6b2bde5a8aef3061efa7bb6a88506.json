{"ast":null,"code":"import firebase from \"firebase/app\"; // Add the Firebase products that you want to use\n\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nclass FirebaseAuthBackend {\n  constructor(firebaseConfig) {\n    this.registerUser = (email, password) => {\n      return new Promise((resolve, reject) => {\n        firebase.auth().createUserWithEmailAndPassword(email, password).then(user => {\n          resolve(firebase.auth().currentUser);\n        }, error => {\n          reject(this._handleError(error));\n        });\n      });\n    };\n\n    this.loginUser = (email, password) => {\n      return new Promise((resolve, reject) => {\n        firebase.auth().signInWithEmailAndPassword(email, password).then(user => {\n          resolve(firebase.auth().currentUser);\n        }, error => {\n          reject(this._handleError(error));\n        });\n      });\n    };\n\n    this.forgetPassword = email => {\n      return new Promise((resolve, reject) => {\n        firebase.auth().sendPasswordResetEmail(email, {\n          url: window.location.protocol + \"//\" + window.location.host + \"/login\"\n        }).then(() => {\n          resolve(true);\n        }).catch(error => {\n          reject(this._handleError(error));\n        });\n      });\n    };\n\n    this.logout = () => {\n      return new Promise((resolve, reject) => {\n        firebase.auth().signOut().then(() => {\n          resolve(true);\n        }).catch(error => {\n          reject(this._handleError(error));\n        });\n      });\n    };\n\n    this.setLoggeedInUser = user => {\n      localStorage.setItem(\"authUser\", JSON.stringify(user));\n    };\n\n    this.getAuthenticatedUser = () => {\n      if (!localStorage.getItem(\"authUser\")) return null;\n      return JSON.parse(localStorage.getItem(\"authUser\"));\n    };\n\n    if (firebaseConfig) {\n      // Initialize Firebase\n      firebase.initializeApp(firebaseConfig);\n      firebase.auth().onAuthStateChanged(user => {\n        if (user) {\n          localStorage.setItem(\"authUser\", JSON.stringify(user));\n        } else {\n          localStorage.removeItem(\"authUser\");\n        }\n      });\n    }\n  }\n  /**\r\n   * Registers the user with given details\r\n   */\n\n\n  /**\r\n   * Handle the error\r\n   * @param {*} error\r\n   */\n  _handleError(error) {\n    // var errorCode = error.code;\n    var errorMessage = error.message;\n    return errorMessage;\n  }\n\n}\n\nlet _fireBaseBackend = null;\n/**\r\n * Initilize the backend\r\n * @param {*} config\r\n */\n\nconst initFirebaseBackend = config => {\n  if (!_fireBaseBackend) {\n    _fireBaseBackend = new FirebaseAuthBackend(config);\n  }\n\n  return _fireBaseBackend;\n};\n/**\r\n * Returns the firebase backend\r\n */\n\n\nconst getFirebaseBackend = () => {\n  return _fireBaseBackend;\n};\n\nexport { initFirebaseBackend, getFirebaseBackend };","map":{"version":3,"sources":["C:/Users/alexa/Documents/Tesis-front/StarterKit/src/helpers/firebase_helper.js"],"names":["firebase","FirebaseAuthBackend","constructor","firebaseConfig","registerUser","email","password","Promise","resolve","reject","auth","createUserWithEmailAndPassword","then","user","currentUser","error","_handleError","loginUser","signInWithEmailAndPassword","forgetPassword","sendPasswordResetEmail","url","window","location","protocol","host","catch","logout","signOut","setLoggeedInUser","localStorage","setItem","JSON","stringify","getAuthenticatedUser","getItem","parse","initializeApp","onAuthStateChanged","removeItem","errorMessage","message","_fireBaseBackend","initFirebaseBackend","config","getFirebaseBackend"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB,C,CAEA;;AACA,OAAO,eAAP;AACA,OAAO,oBAAP;;AAEA,MAAMC,mBAAN,CAA0B;AACzBC,EAAAA,WAAW,CAACC,cAAD,EAAiB;AAAA,SAiB5BC,YAjB4B,GAiBb,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACnC,aAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACvCT,QAAAA,QAAQ,CACNU,IADF,GAEEC,8BAFF,CAEiCN,KAFjC,EAEwCC,QAFxC,EAGEM,IAHF,CAIGC,IAAD,IAAU;AACTL,UAAAA,OAAO,CAACR,QAAQ,CAACU,IAAT,GAAgBI,WAAjB,CAAP;AACA,SANH,EAOGC,KAAD,IAAW;AACVN,UAAAA,MAAM,CAAC,KAAKO,YAAL,CAAkBD,KAAlB,CAAD,CAAN;AACA,SATH;AAWA,OAZM,CAAP;AAaA,KA/B2B;;AAAA,SAoC5BE,SApC4B,GAoChB,CAACZ,KAAD,EAAQC,QAAR,KAAqB;AAChC,aAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACvCT,QAAAA,QAAQ,CACNU,IADF,GAEEQ,0BAFF,CAE6Bb,KAF7B,EAEoCC,QAFpC,EAGEM,IAHF,CAIGC,IAAD,IAAU;AACTL,UAAAA,OAAO,CAACR,QAAQ,CAACU,IAAT,GAAgBI,WAAjB,CAAP;AACA,SANH,EAOGC,KAAD,IAAW;AACVN,UAAAA,MAAM,CAAC,KAAKO,YAAL,CAAkBD,KAAlB,CAAD,CAAN;AACA,SATH;AAWA,OAZM,CAAP;AAaA,KAlD2B;;AAAA,SAuD5BI,cAvD4B,GAuDVd,KAAD,IAAW;AAC3B,aAAO,IAAIE,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACvCT,QAAAA,QAAQ,CACNU,IADF,GAEEU,sBAFF,CAEyBf,KAFzB,EAEgC;AAC9BgB,UAAAA,GAAG,EACFC,MAAM,CAACC,QAAP,CAAgBC,QAAhB,GAA2B,IAA3B,GAAkCF,MAAM,CAACC,QAAP,CAAgBE,IAAlD,GAAyD;AAF5B,SAFhC,EAMEb,IANF,CAMO,MAAM;AACXJ,UAAAA,OAAO,CAAC,IAAD,CAAP;AACA,SARF,EASEkB,KATF,CASSX,KAAD,IAAW;AACjBN,UAAAA,MAAM,CAAC,KAAKO,YAAL,CAAkBD,KAAlB,CAAD,CAAN;AACA,SAXF;AAYA,OAbM,CAAP;AAcA,KAtE2B;;AAAA,SA2E5BY,MA3E4B,GA2EnB,MAAM;AACd,aAAO,IAAIpB,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACvCT,QAAAA,QAAQ,CACNU,IADF,GAEEkB,OAFF,GAGEhB,IAHF,CAGO,MAAM;AACXJ,UAAAA,OAAO,CAAC,IAAD,CAAP;AACA,SALF,EAMEkB,KANF,CAMSX,KAAD,IAAW;AACjBN,UAAAA,MAAM,CAAC,KAAKO,YAAL,CAAkBD,KAAlB,CAAD,CAAN;AACA,SARF;AASA,OAVM,CAAP;AAWA,KAvF2B;;AAAA,SAyF5Bc,gBAzF4B,GAyFRhB,IAAD,IAAU;AAC5BiB,MAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAepB,IAAf,CAAjC;AACA,KA3F2B;;AAAA,SAgG5BqB,oBAhG4B,GAgGL,MAAM;AAC5B,UAAI,CAACJ,YAAY,CAACK,OAAb,CAAqB,UAArB,CAAL,EAAuC,OAAO,IAAP;AACvC,aAAOH,IAAI,CAACI,KAAL,CAAWN,YAAY,CAACK,OAAb,CAAqB,UAArB,CAAX,CAAP;AACA,KAnG2B;;AAC3B,QAAIhC,cAAJ,EAAoB;AACnB;AACAH,MAAAA,QAAQ,CAACqC,aAAT,CAAuBlC,cAAvB;AACAH,MAAAA,QAAQ,CAACU,IAAT,GAAgB4B,kBAAhB,CAAoCzB,IAAD,IAAU;AAC5C,YAAIA,IAAJ,EAAU;AACTiB,UAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAepB,IAAf,CAAjC;AACA,SAFD,MAEO;AACNiB,UAAAA,YAAY,CAACS,UAAb,CAAwB,UAAxB;AACA;AACD,OAND;AAOA;AACD;AAED;;;;;AAuFA;;;;AAIAvB,EAAAA,YAAY,CAACD,KAAD,EAAQ;AACnB;AACA,QAAIyB,YAAY,GAAGzB,KAAK,CAAC0B,OAAzB;AACA,WAAOD,YAAP;AACA;;AA9GwB;;AAiH1B,IAAIE,gBAAgB,GAAG,IAAvB;AAEA;;;;;AAIA,MAAMC,mBAAmB,GAAIC,MAAD,IAAY;AACvC,MAAI,CAACF,gBAAL,EAAuB;AACtBA,IAAAA,gBAAgB,GAAG,IAAIzC,mBAAJ,CAAwB2C,MAAxB,CAAnB;AACA;;AACD,SAAOF,gBAAP;AACA,CALD;AAOA;;;;;AAGA,MAAMG,kBAAkB,GAAG,MAAM;AAChC,SAAOH,gBAAP;AACA,CAFD;;AAIA,SAAQC,mBAAR,EAA6BE,kBAA7B","sourcesContent":["import firebase from \"firebase/app\";\r\n\r\n// Add the Firebase products that you want to use\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\nclass FirebaseAuthBackend {\r\n\tconstructor(firebaseConfig) {\r\n\t\tif (firebaseConfig) {\r\n\t\t\t// Initialize Firebase\r\n\t\t\tfirebase.initializeApp(firebaseConfig);\r\n\t\t\tfirebase.auth().onAuthStateChanged((user) => {\r\n\t\t\t\tif (user) {\r\n\t\t\t\t\tlocalStorage.setItem(\"authUser\", JSON.stringify(user));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlocalStorage.removeItem(\"authUser\");\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Registers the user with given details\r\n\t */\r\n\tregisterUser = (email, password) => {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tfirebase\r\n\t\t\t\t.auth()\r\n\t\t\t\t.createUserWithEmailAndPassword(email, password)\r\n\t\t\t\t.then(\r\n\t\t\t\t\t(user) => {\r\n\t\t\t\t\t\tresolve(firebase.auth().currentUser);\r\n\t\t\t\t\t},\r\n\t\t\t\t\t(error) => {\r\n\t\t\t\t\t\treject(this._handleError(error));\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t});\r\n\t};\r\n\r\n\t/**\r\n\t * Login user with given details\r\n\t */\r\n\tloginUser = (email, password) => {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tfirebase\r\n\t\t\t\t.auth()\r\n\t\t\t\t.signInWithEmailAndPassword(email, password)\r\n\t\t\t\t.then(\r\n\t\t\t\t\t(user) => {\r\n\t\t\t\t\t\tresolve(firebase.auth().currentUser);\r\n\t\t\t\t\t},\r\n\t\t\t\t\t(error) => {\r\n\t\t\t\t\t\treject(this._handleError(error));\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t});\r\n\t};\r\n\r\n\t/**\r\n\t * forget Password user with given details\r\n\t */\r\n\tforgetPassword = (email) => {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tfirebase\r\n\t\t\t\t.auth()\r\n\t\t\t\t.sendPasswordResetEmail(email, {\r\n\t\t\t\t\turl:\r\n\t\t\t\t\t\twindow.location.protocol + \"//\" + window.location.host + \"/login\",\r\n\t\t\t\t})\r\n\t\t\t\t.then(() => {\r\n\t\t\t\t\tresolve(true);\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => {\r\n\t\t\t\t\treject(this._handleError(error));\r\n\t\t\t\t});\r\n\t\t});\r\n\t};\r\n\r\n\t/**\r\n\t * Logout the user\r\n\t */\r\n\tlogout = () => {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tfirebase\r\n\t\t\t\t.auth()\r\n\t\t\t\t.signOut()\r\n\t\t\t\t.then(() => {\r\n\t\t\t\t\tresolve(true);\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => {\r\n\t\t\t\t\treject(this._handleError(error));\r\n\t\t\t\t});\r\n\t\t});\r\n\t};\r\n\r\n\tsetLoggeedInUser = (user) => {\r\n\t\tlocalStorage.setItem(\"authUser\", JSON.stringify(user));\r\n\t};\r\n\r\n\t/**\r\n\t * Returns the authenticated user\r\n\t */\r\n\tgetAuthenticatedUser = () => {\r\n\t\tif (!localStorage.getItem(\"authUser\")) return null;\r\n\t\treturn JSON.parse(localStorage.getItem(\"authUser\"));\r\n\t};\r\n\r\n\t/**\r\n\t * Handle the error\r\n\t * @param {*} error\r\n\t */\r\n\t_handleError(error) {\r\n\t\t// var errorCode = error.code;\r\n\t\tvar errorMessage = error.message;\r\n\t\treturn errorMessage;\r\n\t}\r\n}\r\n\r\nlet _fireBaseBackend = null;\r\n\r\n/**\r\n * Initilize the backend\r\n * @param {*} config\r\n */\r\nconst initFirebaseBackend = (config) => {\r\n\tif (!_fireBaseBackend) {\r\n\t\t_fireBaseBackend = new FirebaseAuthBackend(config);\r\n\t}\r\n\treturn _fireBaseBackend;\r\n};\r\n\r\n/**\r\n * Returns the firebase backend\r\n */\r\nconst getFirebaseBackend = () => {\r\n\treturn _fireBaseBackend;\r\n};\r\n\r\nexport {initFirebaseBackend, getFirebaseBackend};\r\n"]},"metadata":{},"sourceType":"module"}