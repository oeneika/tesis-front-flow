{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexa\\\\Documents\\\\Tesis-front\\\\StarterKit\\\\src\\\\context\\\\face\\\\faceState.js\";\nimport React, { useReducer } from \"react\";\nimport faceContext from \"./faceContext\";\nimport faceReducer from \"./faceReducer\";\nimport { OBTENER_FACES, AGREGAR_FACE, AGREGAR_FOTO, FACE_ACTUAL, OBTENER_FACE_FILTRADO, OBTENER_FACE, ELIMINAR_FACE, ACTUALIZAR_FACE, OBTENER_FACE_IMAGEN } from \"../../types\";\nimport clienteAxios from \"../../config/axios\";\n\nconst FaceState = props => {\n  const initialState = {\n    faces: [],\n    face: null,\n    faces_filtrados: [],\n    imagen: null\n  }; // Dispatch para ejecutar las acciones\n\n  const [state, dispatch] = useReducer(faceReducer, initialState); // Obtener los faces\n\n  const obtenerFaces = async id => {\n    try {\n      const resultado = await clienteAxios.get(`/api/face-by-user/${id}`);\n      dispatch({\n        type: OBTENER_FACES,\n        payload: resultado.data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }; // Obtener imagen del rostro\n\n\n  const obtenerImagenFace = async imagen => {\n    try {\n      const resultado = await clienteAxios.post(`/api/get-image-face/${imagen}`);\n      console.log(resultado);\n      dispatch({\n        type: OBTENER_FACE_IMAGEN,\n        payload: resultado.data.image\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }; // Agregar nuevo faces\n\n\n  const agregarFace = async face => {\n    try {\n      console.log(face);\n      const resultado = await clienteAxios.post(\"/api/save-face\", face);\n      agregarFoto(resultado.data, face.image); // Insertar el faces en el state\n\n      dispatch({\n        type: AGREGAR_FACE,\n        payload: resultado.data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }; // Agregar nuevo faces\n\n\n  const agregarFoto = async (face, imagen) => {\n    try {\n      console.log(imagen);\n      const resultado = await clienteAxios.post(`/api/upload-image-face/${face._id}`, imagen);\n      console.log(resultado); // Insertar el faces en el state\n\n      dispatch({\n        type: AGREGAR_FOTO,\n        payload: resultado.data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }; // Selecciona el Proyecto que el usuario dio click\n\n\n  const faceActual = async faceId => {\n    try {\n      const resultado = await clienteAxios.get(`/api/face/${faceId}`);\n      console.log(resultado);\n      dispatch({\n        type: OBTENER_FACE,\n        payload: resultado.data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }; // Selecciona el Proyecto que el usuario dio click\n\n\n  const faceByConfidenceLevel = async faceId => {\n    try {\n      console.log(`Face Id: ${faceId}`);\n      const resultado = await clienteAxios.get(`/api/face-by-confidence-level/${faceId}`);\n      console.log(resultado);\n      dispatch({\n        type: OBTENER_FACE_FILTRADO,\n        payload: resultado.data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const actualizarFace = async face => {\n    try {\n      const resultado = await clienteAxios.put(`/api/update-face/${face._id}`, face);\n      console.log(resultado);\n      dispatch({\n        type: ACTUALIZAR_FACE,\n        payload: resultado.data.face\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }; // Elimina un faces\n\n\n  const eliminarFace = async faceId => {\n    try {\n      await clienteAxios.delete(`/api/face/${faceId}`);\n      dispatch({\n        type: ELIMINAR_FACE,\n        payload: faceId\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(faceContext.Provider, {\n    value: {\n      faces: state.faces,\n      imagen: state.image,\n      faces_filtrados: state.faces_filtrados,\n      obtenerFaces,\n      agregarFace,\n      faceByConfidenceLevel,\n      agregarFoto,\n      faceActual,\n      actualizarFace,\n      eliminarFace,\n      obtenerImagenFace\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 3\n    }\n  }, props.children);\n};\n\nexport default FaceState;","map":{"version":3,"sources":["C:/Users/alexa/Documents/Tesis-front/StarterKit/src/context/face/faceState.js"],"names":["React","useReducer","faceContext","faceReducer","OBTENER_FACES","AGREGAR_FACE","AGREGAR_FOTO","FACE_ACTUAL","OBTENER_FACE_FILTRADO","OBTENER_FACE","ELIMINAR_FACE","ACTUALIZAR_FACE","OBTENER_FACE_IMAGEN","clienteAxios","FaceState","props","initialState","faces","face","faces_filtrados","imagen","state","dispatch","obtenerFaces","id","resultado","get","type","payload","data","error","console","log","obtenerImagenFace","post","image","agregarFace","agregarFoto","_id","faceActual","faceId","faceByConfidenceLevel","actualizarFace","put","eliminarFace","delete","children"],"mappings":"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","sourcesContent":["import React, {useReducer} from \"react\";\r\n\r\nimport faceContext from \"./faceContext\";\r\nimport faceReducer from \"./faceReducer\";\r\nimport {\r\n\tOBTENER_FACES,\r\n\tAGREGAR_FACE,\r\n\tAGREGAR_FOTO,\r\n\tFACE_ACTUAL,\r\n\tOBTENER_FACE_FILTRADO,\r\n\tOBTENER_FACE,\r\n\tELIMINAR_FACE,\r\n\tACTUALIZAR_FACE,\r\n\tOBTENER_FACE_IMAGEN,\r\n} from \"../../types\";\r\n\r\nimport clienteAxios from \"../../config/axios\";\r\n\r\nconst FaceState = (props) => {\r\n\tconst initialState = {\r\n\t\tfaces: [],\r\n\t\tface: null,\r\n\t\tfaces_filtrados: [],\r\n\t\timagen: null,\r\n\t};\r\n\r\n\t// Dispatch para ejecutar las acciones\r\n\tconst [state, dispatch] = useReducer(faceReducer, initialState);\r\n\r\n\t// Obtener los faces\r\n\tconst obtenerFaces = async (id) => {\r\n\t\ttry {\r\n\t\t\tconst resultado = await clienteAxios.get(`/api/face-by-user/${id}`);\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: OBTENER_FACES,\r\n\t\t\t\tpayload: resultado.data,\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\t// Obtener imagen del rostro\r\n\tconst obtenerImagenFace = async (imagen) => {\r\n\t\ttry {\r\n\t\t\tconst resultado = await clienteAxios.post(\r\n\t\t\t\t`/api/get-image-face/${imagen}`\r\n\t\t\t);\r\n\t\t\tconsole.log(resultado);\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: OBTENER_FACE_IMAGEN,\r\n\t\t\t\tpayload: resultado.data.image,\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\r\n\t// Agregar nuevo faces\r\n\tconst agregarFace = async (face) => {\r\n\t\ttry {\r\n\t\t\tconsole.log(face);\r\n\t\t\tconst resultado = await clienteAxios.post(\"/api/save-face\", face);\r\n\t\t\tagregarFoto(resultado.data, face.image);\r\n\t\t\t// Insertar el faces en el state\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: AGREGAR_FACE,\r\n\t\t\t\tpayload: resultado.data,\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\r\n\t// Agregar nuevo faces\r\n\tconst agregarFoto = async (face, imagen) => {\r\n\t\ttry {\r\n\t\t\tconsole.log(imagen);\r\n\t\t\tconst resultado = await clienteAxios.post(\r\n\t\t\t\t`/api/upload-image-face/${face._id}`,\r\n\t\t\t\timagen\r\n\t\t\t);\r\n\t\t\tconsole.log(resultado);\r\n\t\t\t// Insertar el faces en el state\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: AGREGAR_FOTO,\r\n\t\t\t\tpayload: resultado.data,\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\r\n\t// Selecciona el Proyecto que el usuario dio click\r\n\tconst faceActual = async (faceId) => {\r\n\t\ttry {\r\n\t\t\tconst resultado = await clienteAxios.get(`/api/face/${faceId}`);\r\n\t\t\tconsole.log(resultado);\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: OBTENER_FACE,\r\n\t\t\t\tpayload: resultado.data,\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\r\n\t// Selecciona el Proyecto que el usuario dio click\r\n\tconst faceByConfidenceLevel = async (faceId) => {\r\n\t\ttry {\r\n\t\t\tconsole.log(`Face Id: ${faceId}`);\r\n\t\t\tconst resultado = await clienteAxios.get(\r\n\t\t\t\t`/api/face-by-confidence-level/${faceId}`\r\n\t\t\t);\r\n\t\t\tconsole.log(resultado);\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: OBTENER_FACE_FILTRADO,\r\n\t\t\t\tpayload: resultado.data,\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\r\n\tconst actualizarFace = async (face) => {\r\n\t\ttry {\r\n\t\t\tconst resultado = await clienteAxios.put(\r\n\t\t\t\t`/api/update-face/${face._id}`,\r\n\t\t\t\tface\r\n\t\t\t);\r\n\t\t\tconsole.log(resultado);\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: ACTUALIZAR_FACE,\r\n\t\t\t\tpayload: resultado.data.face,\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\r\n\t// Elimina un faces\r\n\tconst eliminarFace = async (faceId) => {\r\n\t\ttry {\r\n\t\t\tawait clienteAxios.delete(`/api/face/${faceId}`);\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: ELIMINAR_FACE,\r\n\t\t\t\tpayload: faceId,\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<faceContext.Provider\r\n\t\t\tvalue={{\r\n\t\t\t\tfaces: state.faces,\r\n\t\t\t\timagen: state.image,\r\n\t\t\t\tfaces_filtrados: state.faces_filtrados,\r\n\t\t\t\tobtenerFaces,\r\n\t\t\t\tagregarFace,\r\n\t\t\t\tfaceByConfidenceLevel,\r\n\t\t\t\tagregarFoto,\r\n\t\t\t\tfaceActual,\r\n\t\t\t\tactualizarFace,\r\n\t\t\t\teliminarFace,\r\n\t\t\t\tobtenerImagenFace,\r\n\t\t\t}}>\r\n\t\t\t{props.children}\r\n\t\t</faceContext.Provider>\r\n\t);\r\n};\r\n\r\nexport default FaceState;\r\n"]},"metadata":{},"sourceType":"module"}