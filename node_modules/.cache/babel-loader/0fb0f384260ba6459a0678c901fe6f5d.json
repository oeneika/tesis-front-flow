{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexa\\\\Documents\\\\Tesis-front\\\\StarterKit\\\\src\\\\context\\\\face\\\\faceState.js\";\nimport React, { useReducer } from \"react\";\nimport faceContext from \"./faceContext\";\nimport faceReducer from \"./faceReducer\";\nimport { OBTENER_FACES, AGREGAR_FACE, AGREGAR_FOTO, FACE_ACTUAL, OBTENER_FACE_FILTRADO, OBTENER_FACE, ELIMINAR_FACE, ACTUALIZAR_FACE } from \"../../types\";\nimport clienteAxios from \"../../config/axios\";\n\nconst FaceState = props => {\n  const initialState = {\n    faces: [],\n    face: null,\n    faces_filtrados: []\n  }; // Dispatch para ejecutar las acciones\n\n  const [state, dispatch] = useReducer(faceReducer, initialState); // Obtener los faces\n\n  const obtenerFaces = async () => {\n    try {\n      const resultado = await clienteAxios.get(\"/api/faces\");\n      dispatch({\n        type: OBTENER_FACES,\n        payload: resultado.data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }; // Obtener imagen del rostro\n\n\n  const obtenerImagenFace = async id => {\n    try {\n      console.log(id);\n    } catch (error) {\n      console.log(error);\n    }\n  }; // Agregar nuevo faces\n\n\n  const agregarFace = async face => {\n    try {\n      const resultado = await clienteAxios.post(\"/api/save-face\", face);\n      console.log(resultado); //agregarFoto(resultado.data);\n      // Insertar el faces en el state\n\n      dispatch({\n        type: AGREGAR_FACE,\n        payload: resultado.data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }; // Agregar nuevo faces\n\n\n  const agregarFoto = async face => {\n    console.log(face);\n\n    try {\n      const resultado = await clienteAxios.post(`/api/upload-image-face/${face.id}`, face.image);\n      console.log(resultado); // Insertar el faces en el state\n\n      dispatch({\n        type: AGREGAR_FOTO,\n        payload: resultado.data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }; // Selecciona el Proyecto que el usuario dio click\n\n\n  const faceActual = async faceId => {\n    try {\n      const resultado = await clienteAxios.get(`/api/face/${faceId}`);\n      console.log(resultado);\n      dispatch({\n        type: OBTENER_FACE,\n        payload: resultado.data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }; // Selecciona el Proyecto que el usuario dio click\n\n\n  const faceByConfidenceLevel = async faceId => {\n    try {\n      console.log(`Face Id: ${faceId}`);\n      const resultado = await clienteAxios.get(`/api/face-by-confidence-level/${faceId}`);\n      console.log(resultado);\n      dispatch({\n        type: OBTENER_FACE_FILTRADO,\n        payload: resultado.data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const actualizarFace = async face => {\n    try {\n      const resultado = await clienteAxios.put(`/api/update-face/${face._id}`, face);\n      console.log(resultado);\n      dispatch({\n        type: ACTUALIZAR_FACE,\n        payload: resultado.data.face\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }; // Elimina un faces\n\n\n  const eliminarFace = async faceId => {\n    try {\n      await clienteAxios.delete(`/api/face/${faceId}`);\n      dispatch({\n        type: ELIMINAR_FACE,\n        payload: faceId\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(faceContext.Provider, {\n    value: {\n      faces: state.faces,\n      faces_filtrados: state.faces_filtrados,\n      obtenerFaces,\n      agregarFace,\n      faceByConfidenceLevel,\n      agregarFoto,\n      faceActual,\n      actualizarFace,\n      eliminarFace\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 3\n    }\n  }, props.children);\n};\n\nexport default FaceState;","map":{"version":3,"sources":["C:/Users/alexa/Documents/Tesis-front/StarterKit/src/context/face/faceState.js"],"names":["React","useReducer","faceContext","faceReducer","OBTENER_FACES","AGREGAR_FACE","AGREGAR_FOTO","FACE_ACTUAL","OBTENER_FACE_FILTRADO","OBTENER_FACE","ELIMINAR_FACE","ACTUALIZAR_FACE","clienteAxios","FaceState","props","initialState","faces","face","faces_filtrados","state","dispatch","obtenerFaces","resultado","get","type","payload","data","error","console","log","obtenerImagenFace","id","agregarFace","post","agregarFoto","image","faceActual","faceId","faceByConfidenceLevel","actualizarFace","put","_id","eliminarFace","delete","children"],"mappings":"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","sourcesContent":["import React, {useReducer} from \"react\";\r\n\r\nimport faceContext from \"./faceContext\";\r\nimport faceReducer from \"./faceReducer\";\r\nimport {\r\n\tOBTENER_FACES,\r\n\tAGREGAR_FACE,\r\n\tAGREGAR_FOTO,\r\n\tFACE_ACTUAL,\r\n\tOBTENER_FACE_FILTRADO,\r\n\tOBTENER_FACE,\r\n\tELIMINAR_FACE,\r\n\tACTUALIZAR_FACE,\r\n} from \"../../types\";\r\n\r\nimport clienteAxios from \"../../config/axios\";\r\n\r\nconst FaceState = (props) => {\r\n\tconst initialState = {\r\n\t\tfaces: [],\r\n\t\tface: null,\r\n\t\tfaces_filtrados: [],\r\n\t};\r\n\r\n\t// Dispatch para ejecutar las acciones\r\n\tconst [state, dispatch] = useReducer(faceReducer, initialState);\r\n\r\n\t// Obtener los faces\r\n\tconst obtenerFaces = async () => {\r\n\t\ttry {\r\n\t\t\tconst resultado = await clienteAxios.get(\"/api/faces\");\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: OBTENER_FACES,\r\n\t\t\t\tpayload: resultado.data,\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\r\n\t// Obtener imagen del rostro\r\n\tconst obtenerImagenFace = async (id) => {\r\n\t\ttry {\r\n\t\t\tconsole.log(id);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\r\n\t// Agregar nuevo faces\r\n\tconst agregarFace = async (face) => {\r\n\t\ttry {\r\n\t\t\tconst resultado = await clienteAxios.post(\"/api/save-face\", face);\r\n\t\t\tconsole.log(resultado);\r\n\t\t\t//agregarFoto(resultado.data);\r\n\t\t\t// Insertar el faces en el state\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: AGREGAR_FACE,\r\n\t\t\t\tpayload: resultado.data,\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\r\n\t// Agregar nuevo faces\r\n\tconst agregarFoto = async (face) => {\r\n\t\tconsole.log(face);\r\n\t\ttry {\r\n\t\t\tconst resultado = await clienteAxios.post(\r\n\t\t\t\t`/api/upload-image-face/${face.id}`,\r\n\t\t\t\tface.image\r\n\t\t\t);\r\n\t\t\tconsole.log(resultado);\r\n\t\t\t// Insertar el faces en el state\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: AGREGAR_FOTO,\r\n\t\t\t\tpayload: resultado.data,\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\r\n\t// Selecciona el Proyecto que el usuario dio click\r\n\tconst faceActual = async (faceId) => {\r\n\t\ttry {\r\n\t\t\tconst resultado = await clienteAxios.get(`/api/face/${faceId}`);\r\n\t\t\tconsole.log(resultado);\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: OBTENER_FACE,\r\n\t\t\t\tpayload: resultado.data,\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\r\n\t// Selecciona el Proyecto que el usuario dio click\r\n\tconst faceByConfidenceLevel = async (faceId) => {\r\n\t\ttry {\r\n\t\t\tconsole.log(`Face Id: ${faceId}`);\r\n\t\t\tconst resultado = await clienteAxios.get(\r\n\t\t\t\t`/api/face-by-confidence-level/${faceId}`\r\n\t\t\t);\r\n\t\t\tconsole.log(resultado);\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: OBTENER_FACE_FILTRADO,\r\n\t\t\t\tpayload: resultado.data,\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\r\n\tconst actualizarFace = async (face) => {\r\n\t\ttry {\r\n\t\t\tconst resultado = await clienteAxios.put(\r\n\t\t\t\t`/api/update-face/${face._id}`,\r\n\t\t\t\tface\r\n\t\t\t);\r\n\t\t\tconsole.log(resultado);\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: ACTUALIZAR_FACE,\r\n\t\t\t\tpayload: resultado.data.face,\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\r\n\t// Elimina un faces\r\n\tconst eliminarFace = async (faceId) => {\r\n\t\ttry {\r\n\t\t\tawait clienteAxios.delete(`/api/face/${faceId}`);\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: ELIMINAR_FACE,\r\n\t\t\t\tpayload: faceId,\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<faceContext.Provider\r\n\t\t\tvalue={{\r\n\t\t\t\tfaces: state.faces,\r\n\t\t\t\tfaces_filtrados: state.faces_filtrados,\r\n\t\t\t\tobtenerFaces,\r\n\t\t\t\tagregarFace,\r\n\t\t\t\tfaceByConfidenceLevel,\r\n\t\t\t\tagregarFoto,\r\n\t\t\t\tfaceActual,\r\n\t\t\t\tactualizarFace,\r\n\t\t\t\teliminarFace,\r\n\t\t\t}}>\r\n\t\t\t{props.children}\r\n\t\t</faceContext.Provider>\r\n\t);\r\n};\r\n\r\nexport default FaceState;\r\n"]},"metadata":{},"sourceType":"module"}